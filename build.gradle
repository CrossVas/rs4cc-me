buildscript {
    repositories {
        maven { url = 'https://files.minecraftforge.net/maven' }
        maven { url = 'https://repo.spongepowered.org/repository/maven-public' }
        jcenter()
        mavenCentral()
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '4.1.+', changing: true
        classpath group: 'org.spongepowered', name: 'mixingradle', version: '0.7-SNAPSHOT'
    }
}
apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'org.spongepowered.mixin'
// Only edit below this line, the above code adds and enables the necessary things for Forge to be setup.
apply plugin: 'eclipse'
apply plugin: 'maven-publish'

def extraModsDir = "mods-${minecraft_version}"

version = "${mod_version}"
group = 'mirality'
archivesBaseName = "Storage4ComputerCraft-${minecraft_version}"

java.toolchain.languageVersion = JavaLanguageVersion.of(8) // Mojang ships Java 8 to end users, so your mod should target Java 8.

println('Java: ' + System.getProperty('java.version') + ' JVM: ' + System.getProperty('java.vm.version') + '(' + System.getProperty('java.vendor') + ') Arch: ' + System.getProperty('os.arch'))
minecraft {
    mappings channel: 'official', version: "${minecraft_version}"
    // makeObfSourceJar = false // an Srg named sources jar is made by default. uncomment this to disable.
    
    accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')

    runs {
        client {
            workingDirectory project.file('run')

            //property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'
            property 'forge.logging.markers', ''
            property 'forge.logging.console.level', 'debug'
            //property 'mixin.env.disableRefMap', 'true'

            mods {
                storage4computercraft {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'
            property 'forge.logging.console.level', 'debug'
            //property 'mixin.env.disableRefMap', 'true'

            mods {
                storage4computercraft {
                    source sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'
            property 'forge.logging.console.level', 'debug'
            //property 'mixin.env.disableRefMap', 'true'

            args '--mod', 'storage4computercraft', '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/')

            mods {
                storage4computercraft {
                    source sourceSets.main
                }
            }
        }
    }
}

sourceSets {
    main.resources.srcDirs += 'src/generated/resources'
}

processResources {
    inputs.property 'version', project.version

    from(sourceSets.main.resources.srcDirs) {
        include 'META-INF/mods.toml'
        expand 'version': project.version
    }
    from(sourceSets.main.resources.srcDirs) {
        exclude 'META-INF/mods.toml'
    }
}

repositories {
    flatDir {
        name "extra-mods"
        dir file(extraModsDir)
        content {
            includeGroup 'extra-mods'
        }
    }
    maven {
        name 'TOP'
        url 'https://maven.tterrag.com/'
        content {
            includeGroup 'mcjty.theoneprobe'
        }
    }
    maven {
        name 'HWYLA'
        url 'https://maven.tehnut.info'
        content {
            includeGroup 'mcp.mobius.waila'
        }
    }
    maven {
        name 'JEI'
        url 'https://dvs1.progwml6.com/files/maven'
        content {
            includeGroup 'mezz.jei'
        }
    }
    maven {
        name 'RS maven'
        url 'https://repo.refinedmods.com'
        content {
            includeGroup 'com.refinedmods'
        }
    }
    maven {
        name 'AE2'
        url 'https://modmaven.dev/'
        content {
            includeGroup 'appeng'
        }
    }
    maven {
        name 'CC Tweaked'
        url 'https://squiddev.cc/maven/'
        content {
            includeGroup 'org.squiddev'
        }
    }
}

dependencies {
    minecraft "net.minecraftforge:forge:${minecraft_version}-${forge_version}"

    compile "org.squiddev:cc-tweaked-${minecraft_version}:${cc_version}"

    compileOnly "com.refinedmods:refinedstorage:${rs_version}"
    compileOnly "appeng:appliedenergistics2:${ae2_version}:api"
    compileOnly "mcjty.theoneprobe:TheOneProbe-${top_version}:api"
    compileOnly "mcp.mobius.waila:Hwyla:${hwyla_version}:api"

    // these are separate so we can test without them loaded
    runtimeOnly "com.refinedmods:refinedstorage:${rs_version}"
    runtimeOnly "appeng:appliedenergistics2:${ae2_version}"
    runtimeOnly "mcjty.theoneprobe:TheOneProbe-${top_version}"
    runtimeOnly "mcp.mobius.waila:Hwyla:${hwyla_version}"
    runtimeOnly "mezz.jei:jei-${minecraft_version}:${jei_version}"

    // extra mods for testing
    for (mod in fileTree(dir: extraModsDir, include: '*.jar')) {
        def basename = mod.name.substring(0, mod.name.length() - ".jar".length())
        def sep = basename.lastIndexOf('-')
        assert sep != -1
        def name = basename.substring(0, sep)
        def version = basename.substring(sep + 1)
        runtimeOnly "extra-mods:$name:$version"
    }
}

jar {
    manifest {
        attributes([
            "Specification-Title": "storage4computercraft",
            "Specification-Vendor": "Mirality",
            "Specification-Version": "1",
            "Implementation-Title": project.name,
            "Implementation-Version": "${version}",
            "Implementation-Vendor" :"Mirality",
            "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}

jar.finalizedBy('reobfJar') 

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

task deobfJar(type: Jar) {
    from sourceSets.main.output
    classifier 'deobf'
}

artifacts {
    archives jar
    archives sourcesJar
    archives deobfJar
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            groupId = project.group
            artifactId = project.archivesBaseName
            version = project.version
            artifact jar
            artifact sourcesJar
            artifact deobfJar
        }
    }
    repositories {
        maven {
            url "file:///${project.projectDir}/mcmodsrepo"
        }
    }
}